@model IEnumerable<Product>
<div class="container-fluid p-0">
    <!-- First Row -->
    <div class="row g-0 mx-0 w-100 mb-3">
        @{
            var productsArray = Model.ToArray();
            var itemsPerRow = 6;
            var maxProductsToShow = 12; // 2 rows of 6 products

            // Display first row (first 6 products or fewer)
            for (int i = 0; i < Math.Min(itemsPerRow, productsArray.Length); i++)
            {
                var product = productsArray[i];
                <div class="col-lg-2 col-md-4 col-sm-6 col-12 d-flex justify-content-center p-2">
                    <div class="card card-primary card-outline shadow rounded hover-shadow transition-all"
                         style="width: 100%; max-width: 220px; transition: transform 0.3s ease;">
                        <div class="position-relative overflow-hidden" style="border-radius: 0.5rem 0.5rem 0 0;">
                            <img src="@(product.ImageUrl ?? "https://placehold.co/600x400")"
                                 class="card-img-top"
                                 alt="@product.Title"
                                 style="height: 160px; object-fit: cover; transform: scale(1); transition: transform 0.5s ease;" />
                        </div>
                        <div class="card-body d-flex flex-column align-items-center p-3 pt-2 pb-2">
                            <h6 class="card-title text-dark mb-0 text-center fw-bold"
                                style="font-size: 1rem; text-transform: capitalize; line-height: 1.2rem; height: 2.4rem; overflow: hidden;">
                                @product.Title
                            </h6>
                            <p class="text-muted mb-0" style="font-size: 0.8rem;">
                                <i class="bi bi-tags-fill"></i> <span class="fw-semibold text-primary">@product.Category?.Name</span>
                            </p>
                            <div class="price-tag my-1">
                                <span class="fw-bold">@product.Price.ToString("C")</span>
                            </div>
                            <p class="text-secondary fst-italic mb-2 text-center" style="font-size: 0.8rem; height: 1.6rem; overflow: hidden;">
                                @{
                                    var des = product.Description;
                                    if (des.Length > 30)
                                    {
                                        des = product.Description.Substring(0, 29) + "...";
                                    }
                                }
                                @des
                            </p>
                            <a asp-action="Details" asp-route-productId="@product.Id"
                               class="btn btn-primary w-100 rounded-pill shadow-sm position-relative overflow-hidden"
                               style="font-size: 0.9rem; font-weight: 600; padding: 0.5rem 1rem; transition: all 0.3s ease;">
                                <span>Details</span>
                                <i class="fas fa-arrow-right position-absolute opacity-0"
                                   style="right: 1rem; transition: all 0.3s ease;"></i>
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

    <!-- Second Row -->
    <div class="row g-0 mx-0 w-100">
        @{
            // Display second row (next 6 products or fewer)
            for (int i = itemsPerRow; i < Math.Min(maxProductsToShow, productsArray.Length); i++)
            {
                var product = productsArray[i];
                <div class="col-lg-2 col-md-4 col-sm-6 col-12 d-flex justify-content-center p-2">
                    <div class="card card-primary card-outline shadow rounded hover-shadow transition-all"
                         style="width: 100%; max-width: 220px; transition: transform 0.3s ease;">
                        <div class="position-relative overflow-hidden" style="border-radius: 0.5rem 0.5rem 0 0;">
                            <img src="@(product.ImageUrl ?? "https://placehold.co/600x400")"
                                 class="card-img-top"
                                 alt="@product.Title"
                                 style="height: 160px; object-fit: cover; transform: scale(1); transition: transform 0.5s ease;" />
                        </div>
                        <div class="card-body d-flex flex-column align-items-center p-3 pt-2 pb-2">
                            <h6 class="card-title text-dark mb-0 text-center fw-bold"
                                style="font-size: 1rem; text-transform: capitalize; line-height: 1.2rem; height: 2.4rem; overflow: hidden;">
                                @product.Title
                            </h6>
                            <p class="text-muted mb-0" style="font-size: 0.8rem;">
                                <i class="bi bi-tags-fill"></i>  <span class="fw-semibold text-primary">@product.Category?.Name</span>
                            </p>
                            <div class="price-tag my-1">
                                <span class="fw-bold">@product.Price.ToString("C")</span>
                            </div>
                            <p class="text-secondary fst-italic mb-2 text-center" style="font-size: 0.8rem; height: 1.6rem; overflow: hidden;">
                                @{
                                    var des = product.Description;
                                    if (des.Length > 30)
                                    {
                                        des = product.Description.Substring(0, 29) + "...";
                                    }

                                }
                                @des
                            </p>
                            <a asp-action="Details" asp-route-productId="@product.Id"
                               class="btn btn-primary w-100 rounded-pill shadow-sm position-relative overflow-hidden"
                               style="font-size: 0.9rem; font-weight: 600; padding: 0.5rem 1rem; transition: all 0.3s ease;">
                                <span>Details</span>
                                <i class="fas fa-arrow-right position-absolute opacity-0"
                                   style="right: 1rem; transition: all 0.3s ease;"></i>
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<!-- Pagination - Modernized -->
<div class="d-flex justify-content-center mt-4">
    @{
        // Calculate total pages based on products count and products per page (12)
        var productsPerPage = 12;
        var totalProducts = Model.Count();
        var calculatedTotalPages = (int)Math.Ceiling((double)totalProducts / productsPerPage);

        // Use calculated pages or ViewBag value if available
        var totalPages = ViewBag.TotalPages != null ? (int)ViewBag.TotalPages : calculatedTotalPages;
        var currentPage = ViewBag.CurrentPage != null ? (int)ViewBag.CurrentPage : 1;
    }

    <nav aria-label="Product pagination">
        <ul class="pagination pagination-rounded">
            <!-- Previous button -->
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-page="@(currentPage - 1)"
                       asp-route-query="@ViewBag.SearchQuery"
                       class="page-link" aria-label="Previous">
                        <span aria-hidden="true">«</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link" aria-label="Previous">
                        <span aria-hidden="true">«</span>
                    </span>
                </li>
            }

            <!-- Page numbers -->
            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a asp-action="Index"
                       asp-route-page="@i"
                       asp-route-query="@ViewBag.SearchQuery"
                       class="page-link">
                        @i
                    </a>
                </li>
            }

            <!-- Next button -->
            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a asp-action="Index"
                       asp-route-page="@(currentPage + 1)"
                       asp-route-query="@ViewBag.SearchQuery"
                       class="page-link" aria-label="Next">
                        <span aria-hidden="true">»</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link" aria-label="Next">
                        <span aria-hidden="true">»</span>
                    </span>
                </li>
            }
        </ul>
    </nav>
</div>

<!-- Add custom styles -->
<style>
    .hover-shadow:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.12) !important;
    }

        .hover-shadow:hover img {
            transform: scale(1.05);
        }

    .card-primary.card-outline {
        border-top: 3px solid #4568dc;
    }

    .btn-primary {
        background: linear-gradient(45deg, #4568dc, #3f5efb);
        border: none;
    }

        .btn-primary:hover {
            background: linear-gradient(45deg, #3f5efb, #4568dc);
        }

            .btn-primary:hover i {
                opacity: 1 !important;
                right: 0.75rem;
            }

            .btn-primary:hover span {
                transform: translateX(-10px);
                display: inline-block;
            }

    .pagination-rounded .page-link {
        border-radius: 50% !important;
        margin: 0 3px;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .page-item.active .page-link {
        background: linear-gradient(45deg, #4568dc, #3f5efb);
        border-color: #3f5efb;
    }

    .transition-all {
        transition: all 0.3s ease;
    }

    /* Simplified Price Tag Styling */
    .price-tag {
        font-size: 0.95rem;
    }
</style>

<!-- Add Font Awesome for icons (put this in layout or in the head section) -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">


