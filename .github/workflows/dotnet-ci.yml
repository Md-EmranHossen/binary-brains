name: .NET CI with SonarCloud Analysis
on:
  pull_request:
    branches:
      - main
    types: [reopened, synchronize, opened]
  push:
    branches:
      - main
jobs:
  build-and-analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetching full history for SonarCloud
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"
      
      - name: Set up JDK 17 for SonarCloud
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: "zulu"
      
      - name: Install SonarCloud scanner and Coverlet
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global coverlet.console
      
      - name: Restore dependencies
        run: dotnet restore Src/ECommerceSystem/ECommerceSystem.sln
      
      - name: Begin SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"Learnathon-By-Geeky-Solutions_binary-brains" \
            /o:"learnathon-by-geeky-solutions" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="${{ github.workspace }}/coverage.xml" \
            /d:sonar.sources="Src" \
            /d:sonar.exclusions="**/bin/**,**/obj/**,**/*.Designer.cs,**/Migrations/**,**/*.cshtml,**/*.css,**/*.cshtml.cs" \
            /d:sonar.coverage.exclusions="**/Program.cs" \
            /d:sonar.tests="Src" \
            /d:sonar.test.inclusions="**/*Tests/**/*.cs,**/*.Tests.cs,**/*.Test.cs,**/AmarTech.Test/**/*.cs" \
            /d:sonar.sourceEncoding="UTF-8" \
            /d:sonar.projectBaseDir="${{ github.workspace }}"
      
      - name: Build
        run: dotnet build Src/ECommerceSystem/ECommerceSystem.sln --no-restore --configuration Release --no-incremental
      
      # First, identify the test project DLL path
      - name: Find test project path
        id: find-test-dll
        run: |
          TEST_DLL_PATH=$(find . -path "*/bin/Release/*/AmarTech.Test.dll" | head -1)
          echo "TEST_DLL_PATH=$TEST_DLL_PATH" >> $GITHUB_ENV
          echo "Found test DLL at: $TEST_DLL_PATH"
      
      # Then run coverlet with that path
      - name: Run tests with Coverlet
        run: |
          coverlet "${{ env.TEST_DLL_PATH }}" \
            --target "dotnet" \
            --targetargs "test Src/ECommerceSystem/ECommerceSystem.sln --no-build --configuration Release" \
            --include "[AmarTech.Web]*" \
            --include "[AmarTech.Application]*" \
            --include "[AmarTech.Infrastructure]*" \
            --include "[AmarTech.Domain]*" \
            --exclude "[*]*.Migrations.*" \
            --exclude "[AmarTech.Web]*Program" \
            -f=opencover \
            -o="${{ github.workspace }}/coverage.xml" \
            --verbosity detailed
      
      - name: List coverage files (Debugging)
        run: ls -la ${{ github.workspace }}/coverage.xml
      
      - name: End SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
